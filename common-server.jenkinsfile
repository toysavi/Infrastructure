pipeline {
    agent { label 'master' }
    environment {
        TELEGRAM_BOT_TOKEN = credentials('Telegram_Bot_Token') // Add in Jenkins credentials
        TELEGRAM_GROUP_ID  = credentials('Telegram_Group_ID')  // Add in Jenkins credentials
    }
    parameters {
        choice(name: 'OS',  choices: ['','ubuntu','redhat','solaris'], description: 'Please choose OS')
        string(name: 'Server_Name', defaultValue: '', description: 'Enter the server name')
        string(name: 'IP_Address', defaultValue: '', description: 'Enter the IP address')
        string(name: 'UserName', defaultValue: '', description: 'Enter the username')
        password(name: 'Password', defaultValue: '', description: 'Please input the new password')
        choice(name: 'ENV',  choices: ['','pre-prod','uat','production'], description: 'Please choose Environment')
        booleanParam(name: 'Git', defaultValue: false, description: 'Select to Install Git')
        booleanParam(name: 'Docker', defaultValue: false, description: 'Select to Install Docker')
        booleanParam(name: 'Apache', defaultValue: false, description: 'Select to Install Apache')
        booleanParam(name: 'Nginx', defaultValue: false, description: 'Select to Install Nginx')
        booleanParam(name: 'Jboss', defaultValue: false, description: 'Select to Install Jboss')
        booleanParam(name: 'Java', defaultValue: false, description: 'Select to Install Java')
    }
    stages {
        stage('Initialization') {
            steps {
                echo "Starting the pipeline..."
                echo "Build ID: ${env.BUILD_ID}"
                echo "Selected OS: ${params.OS}"
                echo "Environment: ${params.ENV}"
                echo "Server Name: ${params.Server_Name}"
                echo "IP Address: ${params.IP_Address}"
                echo "Username: ${params.UserName}"
            }
        }
        stage('Installations') {
            steps {
                script {
                    if (params.Git) {
                        echo "Installing Git..."
                        // Add Git installation logic here
                    }
                    if (params.Docker) {
                        echo "Installing Docker..."
                        // Add Docker installation logic here
                    }
                    if (params.Apache) {
                        echo "Installing Apache..."
                        // Add Apache installation logic here
                    }
                    if (params.Nginx) {
                        echo "Installing Nginx..."
                        // Add Nginx installation logic here
                    }
                    if (params.Jboss) {
                        echo "Installing Jboss..."
                        // Add Jboss installation logic here
                    }
                    if (params.Java) {
                        echo "Installing Java..."
                        // Add Java installation logic here
                    }
                }
            }
        }
        stage('Create Notification File') {
            steps {
                script {
                    def notificationContent = """
                    Build Summary:
                    Build ID: ${env.BUILD_ID}
                    OS: ${params.OS}
                    Environment: ${params.ENV}
                    Server Name: ${params.Server_Name}
                    IP Address: ${params.IP_Address}
                    Selected Installations:
                        Git: ${params.Git}
                        Docker: ${params.Docker}
                        Apache: ${params.Apache}
                        Nginx: ${params.Nginx}
                        Jboss: ${params.Jboss}
                        Java: ${params.Java}
                    """
                    writeFile file: 'build_summary.txt', text: notificationContent
                }
            }
        }
        stage('Send Notification') {
            steps {
                script {
                    sh """
                    curl -F chat_id=${env.TELEGRAM_GROUP_ID} \
                         -F document=@build_summary.txt \
                         -X POST https://api.telegram.org/bot${env.TELEGRAM_BOT_TOKEN}/sendDocument
                    """
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline executed successfully. Build ID: ${env.BUILD_ID}"
        }
        failure {
            echo "Pipeline execution failed. Build ID: ${env.BUILD_ID}"
        }
    }
}
